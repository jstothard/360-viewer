{"version":3,"sources":["components/ButtonAppBar.jsx","components/Dropzone.jsx","components/UploadTable.jsx","components/Upload.jsx","components/Viewer.jsx","App.js","index.js"],"names":["ButtonAppBar","props","classes","react_default","a","createElement","AppBar","position","className","appBar","Toolbar","IconButton","edge","menuButton","color","aria-label","Menu_default","Typography","variant","title","Dropzone","handleChange","Card","CardHeader","index_es","onChange","acceptedFiles","showPreviews","showPreviewsInDropzone","maxFileSize","dropzoneParagraphClass","paragraph","filesLimit","UploadTable","files","updateRow","removeRow","data","map","file","index","number","name","date","lastModifiedDate","dist_default","columns","field","type","editable","options","search","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","indexOf","onRowDelete","ViewerLink","React","forwardRef","ref","es","Object","assign","innerRef","to","Upload","Container","maxWidth","container","Grid","justify","alignItems","spacing","item","xs","components_Dropzone","Button","button","component","CloudUpload_default","rightIcon","Viewer","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","savePanoImage","viewer","current","getViewer","img","getRenderer","render","getPitch","Math","PI","getYaw","getHfov","returnImage","saveAs","references","Array","length","fill","createRef","_this2","_this$props","fixed","key","URL","createObjectURL","card","subheader","react_moment_dist_default","format","lastModified","action","onClick","CameraAlt_default","pannellum_react_es","width","height","image","pitch","yaw","hfov","compass","autoLoad","Component","App","state","setState","row","newFile","File","splice","root","rel","href","content","components_Upload","default","components_Viewer","path","withStyles","theme","display","flexGrow","appBarSpacer","mixins","toolbar","overflow","padding","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginRight","objectSpread","typography","body1","paddingTop","paddingBottom","margin","leftIcon","marginLeft","iconSmall","fontSize","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c0c741ac.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n// const useStyles = makeStyles(theme => ({\n//   appBar: {\n//     zIndex: theme.zIndex.drawer + 1,\n//     transition: theme.transitions.create(['width', 'margin'], {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen\n//     })\n//   },\n//   menuButton: {\n//     marginRight: theme.spacing(2)\n//   },\n//   title: {\n//     flexGrow: 1\n//   }\n// }));\n\nexport default function ButtonAppBar(props) {\n  // const classes = useStyles();\n  const { classes } = props;\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          360 Media Viewer\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport PT from 'prop-types';\nimport { Card, CardHeader } from '@material-ui/core';\n\n// const useStyles = makeStyles(theme => ({\n//   paragraph: {\n//     ...theme.typography.body1,\n//   },\n// }));\n\nfunction Dropzone(props) {\n  const { handleChange, classes } = props;\n  // const classes = useStyles();\n  return (\n    <Card>\n      <CardHeader title=\"Upload Media\" />\n      <DropzoneArea\n        onChange={handleChange}\n        acceptedFiles={['image/jpeg', 'image/jpg', 'image/png', 'image/bmp']}\n        showPreviews\n        showPreviewsInDropzone={false}\n        maxFileSize={100000000}\n        dropzoneParagraphClass={classes.paragraph}\n        filesLimit={10}\n      />\n    </Card>\n  );\n}\n\nexport default Dropzone;\n\nDropzone.propTypes = {\n  handleChange: PT.func.isRequired,\n};\n","import React from 'react';\nimport MaterialTable from 'material-table';\nimport PT from 'prop-types';\n\nexport default function UploadTable(props) {\n  const { files, updateRow, removeRow } = props;\n  const columns = [\n    { title: '#', field: 'number', type: 'numeric', editable: 'never' },\n    { title: 'Name', field: 'name' },\n    { title: 'Date', field: 'date', type: 'date', editable: 'never' }\n  ];\n  const data = files.map((file, index) => ({\n    number: index + 1,\n    name: file.name,\n    date: file.lastModifiedDate\n  }));\n\n  return (\n    <div>\n      <MaterialTable\n        title=\"Processed files\"\n        columns={columns}\n        data={data}\n        options={{ search: false }}\n        editable={{\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                updateRow(newData, data.indexOf(oldData));\n              }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                removeRow(data.indexOf(oldData));\n              }, 600);\n            })\n        }}\n      />\n    </div>\n  );\n}\n\nUploadTable.propTypes = {\n  updateRow: PT.func.isRequired,\n  removeRow: PT.func.isRequired,\n  files: PT.arrayOf(PT.object).isRequired\n};\n","import React from 'react';\nimport PT from 'prop-types';\nimport { makeStyles, Container, Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { Link } from '@reach/router';\nimport Dropzone from './Dropzone';\nimport UploadTable from './UploadTable';\n\n// const useStyles = makeStyles(theme => ({\n//   container: {\n//     paddingTop: theme.spacing(4),\n//     paddingBottom: theme.spacing(4)\n//   },\n//   button: {\n//     margin: theme.spacing(1)\n//   },\n//   leftIcon: {\n//     marginRight: theme.spacing(1)\n//   },\n//   rightIcon: {\n//     marginLeft: theme.spacing(1)\n//   },\n//   iconSmall: {\n//     fontSize: 20\n//   }\n// }));\n\nconst ViewerLink = React.forwardRef((props, ref) => (\n  <Link innerRef={ref} to=\"/viewer\" {...props} />\n));\n\nfunction Upload(props) {\n  // const classes = useStyles();\n  const { handleChange, updateRow, removeRow, files, classes } = props;\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Grid container justify=\"center\" alignItems=\"center\" spacing={3}>\n        <Grid item xs={12}>\n          <Dropzone handleChange={handleChange} classes={classes} />\n        </Grid>\n        <Grid item xs={12}>\n          <UploadTable files={files} updateRow={updateRow} removeRow={removeRow} />\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            component={ViewerLink}\n          >\n            Upload\n            <CloudUploadIcon className={classes.rightIcon} />\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nUpload.propTypes = {\n  handleChange: PT.func.isRequired,\n  updateRow: PT.func.isRequired,\n  removeRow: PT.func.isRequired,\n  files: PT.arrayOf(PT.object).isRequired,\n};\n\nexport default Upload;\n","import React, { Component } from 'react';\nimport { Container, Card, CardHeader, Grid, IconButton } from '@material-ui/core';\n// import { withStyles } from '@material-ui/core/styles';\nimport { Pannellum } from 'pannellum-react';\nimport PT from 'prop-types';\nimport Moment from 'react-moment';\nimport CameraAlt from '@material-ui/icons/CameraAlt';\nimport { saveAs } from 'file-saver';\n\n// const styles = theme => ({\n//   container: {\n//     paddingTop: theme.spacing(4),\n//     paddingBottom: theme.spacing(4),\n//   },\n//   button: {\n//     margin: theme.spacing(1),\n//   },\n//   leftIcon: {\n//     marginRight: theme.spacing(1),\n//   },\n//   rightIcon: {\n//     marginLeft: theme.spacing(1),\n//   },\n//   iconSmall: {\n//     fontSize: 20,\n//   },\n// });\n\nclass Viewer extends Component {\n  constructor(props) {\n    const { files } = props;\n    super(props);\n    this.references = Array(files.length)\n      .fill(0)\n      .map(() => React.createRef());\n  }\n\n  savePanoImage = (name, ref) => {\n    const viewer = ref.current.getViewer();\n    const img = viewer\n      .getRenderer()\n      .render(\n        (viewer.getPitch() / 180) * Math.PI,\n        (viewer.getYaw() / 180) * Math.PI,\n        (viewer.getHfov() / 180) * Math.PI,\n        { returnImage: true },\n      );\n    saveAs(img, name);\n  };\n\n  render() {\n    const { classes, files } = this.props;\n    return (\n      <Container fixed>\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={3}>\n          {files.map((file, index) => (\n            <Grid item xs={12} key={URL.createObjectURL(file)}>\n              <Card className={classes.card}>\n                <CardHeader\n                  title={file.name}\n                  subheader={<Moment format=\"D/M/YYYY\">{file.lastModified}</Moment>}\n                  action={\n                    // eslint-disable-next-line react/jsx-wrap-multilines\n                    <IconButton\n                      aria-label=\"snapshot\"\n                      onClick={() => this.savePanoImage(file.name, this.references[index])}\n                    >\n                      <CameraAlt />\n                    </IconButton>\n                  }\n                />\n                <Pannellum\n                  ref={this.references[index]}\n                  width=\"100%\"\n                  height=\"500px\"\n                  image={URL.createObjectURL(file)}\n                  pitch={10}\n                  yaw={180}\n                  hfov={110}\n                  compass\n                  autoLoad\n                />\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nViewer.propTypes = {\n  files: PT.arrayOf(PT.object).isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  classes: PT.object.isRequired,\n};\n\nexport default Viewer;\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Router } from '@reach/router';\r\nimport ButtonAppBar from './components/ButtonAppBar';\r\nimport Upload from './components/Upload';\r\nimport Viewer from './components/Viewer';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100%',\r\n    overflow: 'auto',\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  paragraph: {\r\n    ...theme.typography.body1,\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n});\r\n\r\nclass App extends Component {\r\n  state = {\r\n    files: [],\r\n  };\r\n\r\n  handleChange = files => {\r\n    this.setState({\r\n      files,\r\n    });\r\n  };\r\n\r\n  updateRow = (row, index) => {\r\n    const { files } = this.state;\r\n    const newFile = new File([files[index]], row.name);\r\n    files.splice(index, 1, newFile);\r\n    this.setState({\r\n      files,\r\n    });\r\n  };\r\n\r\n  removeRow = index => {\r\n    const { files } = this.state;\r\n    files.splice(index, 1);\r\n    this.setState({\r\n      files,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { files } = this.state;\r\n    return (\r\n      <div className={classes.root}>\r\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\r\n        <ButtonAppBar classes={classes} />\r\n        <div className={classes.content}>\r\n          <Router>\r\n            <Upload\r\n              handleChange={this.handleChange}\r\n              updateRow={this.updateRow}\r\n              removeRow={this.removeRow}\r\n              files={files}\r\n              classes={classes}\r\n              default\r\n            />\r\n            <Viewer files={files} path=\"/viewer\" classes={classes} />\r\n          </Router>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}